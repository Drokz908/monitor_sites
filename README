üåê Monitoramento de Disponibilidade de Sites

Vis√£o Geral do Projeto
Este projeto Python √© uma solu√ß√£o robusta e automatizada para monitorar a disponibilidade e o status de websites. Desenvolvido para garantir a proatividade na detec√ß√£o de falhas, ele verifica periodicamente uma lista de URLs, registra os resultados em um banco de dados SQLite local e envia alertas por e-mail em tempo real caso algum problema seja detectado.

A solu√ß√£o √© ideal para pequenas e m√©dias empresas, desenvolvedores ou administradores de sistemas que precisam de uma ferramenta simples, mas eficaz, para acompanhar a sa√∫de de seus servi√ßos online, minimizando o tempo de inatividade e garantindo a continuidade das opera√ß√µes.

üöÄ Funcionalidades
Verifica√ß√£o de Status HTTP: Realiza requisi√ß√µes HTTP GET para URLs configuradas e registra o c√≥digo de status (ex: 200 OK, 404 Not Found, 500 Internal Server Error).

Tratamento de Erros de Conex√£o: Identifica e categoriza falhas de rede como erros SSL, timeouts e problemas de conex√£o, atribuindo c√≥digos num√©ricos espec√≠ficos para f√°cil identifica√ß√£o.

Persist√™ncia de Dados: Armazena todos os resultados das verifica√ß√µes (site, status, mensagem e data/hora) em um banco de dados SQLite (monitor.db) para an√°lise hist√≥rica e relat√≥rios.

Sistema de Alerta por E-mail: Envia notifica√ß√µes autom√°ticas por e-mail para um endere√ßo configurado sempre que um site apresentar um status diferente de "OK" (c√≥digo 200).

Logging Detalhado: Mant√©m um registro (monitor_sites.log) de todas as opera√ß√µes e eventos importantes, facilitando a depura√ß√£o e o acompanhamento do hist√≥rico de execu√ß√µes.

Configura√ß√£o Segura: Utiliza vari√°veis de ambiente (.env) para gerenciar credenciais sens√≠veis (como dados de e-mail), garantindo que n√£o sejam expostas no c√≥digo-fonte.

Agendamento Flex√≠vel: Projetado para ser executado em intervalos regulares usando agendadores de tarefas do sistema operacional (como cron no Linux/macOS ou Agendador de Tarefas no Windows).

üõ†Ô∏è Tecnologias Utilizadas
Python 3.x: Linguagem de programa√ß√£o principal.

requests: Biblioteca HTTP para fazer requisi√ß√µes web.

sqlite3: M√≥dulo embutido do Python para intera√ß√£o com bancos de dados SQLite.

datetime: M√≥dulo Python para manipula√ß√£o de datas e horas.

logging: M√≥dulo Python para registro de eventos e depura√ß√£o.

smtplib & email.mime: M√≥dulos Python para envio de e-mails via SMTP.

python-dotenv: Biblioteca para carregar vari√°veis de ambiente de arquivos .env.

‚öôÔ∏è Como Configurar e Rodar
Siga estes passos para colocar o monitoramento em funcionamento:

1. Pr√©-requisitos
Python 3.x instalado.

Acesso √† linha de comando (terminal/CMD/PowerShell).

2. Clonar o Reposit√≥rio (se estiver no GitHub)
git clone <URL_DO_SEU_REPOSITORIO>
cd monitor-de-sites # ou o nome da sua pasta

3. Instalar Depend√™ncias
pip install requests python-dotenv

4. Configurar Credenciais (Arquivo .env)
Crie um arquivo chamado .env (com o ponto na frente) na raiz do projeto e adicione suas credenciais de e-mail. Este arquivo NUNCA deve ser enviado para o GitHub.

EMAIL_SENDER=seu_email@gmail.com
EMAIL_PASSWORD=sua_senha_de_aplicativo_do_gmail # Ou senha normal, dependendo do provedor
EMAIL_RECEIVER=email_destino_alerta@exemplo.com
SMTP_SERVER=smtp.gmail.com
SMTP_PORT=587

Importante para Gmail: Se estiver usando Gmail, voc√™ precisar√° ativar a "Verifica√ß√£o em duas etapas" e gerar uma "Senha de aplicativo" nas configura√ß√µes de seguran√ßa da sua conta Google. Use essa senha de aplicativo em EMAIL_PASSWORD.

5. Configurar Sites para Monitorar (Arquivo sites.txt)
Crie um arquivo chamado sites.txt na raiz do projeto. Liste as URLs que voc√™ deseja monitorar, uma por linha:

https://www.google.com
https://www.youtube.com
https://site-que-nao-existe.com

6. Executar o Script
Para testar o script manualmente:

python monitor.py

7. Agendar a Execu√ß√£o (Monitoramento Cont√≠nuo)
Para que o script seja executado automaticamente em intervalos regulares (ex: a cada 1 minuto), use o agendador de tarefas do seu sistema operacional:

No Linux/macOS (usando cron):

Abra o editor do crontab: crontab -e

Adicione a linha (substitua /caminho/completo/para/monitor.py pelo caminho real do seu script):

* * * * * python3 /caminho/completo/para/monitor.py >> /var/log/monitor_sites.log 2>&1

Isso redirecionar√° a sa√≠da do script para um arquivo de log para depura√ß√£o.

No Windows (usando Agendador de Tarefas):

Pesquise por "Agendador de Tarefas" no menu Iniciar.

Crie uma "Tarefa B√°sica", configure um gatilho para repetir a cada "1 minuto", e na a√ß√£o, aponte para o execut√°vel do Python (ex: C:\Python39\python.exe) e passe o caminho completo do seu script monitor.py como argumento.

üìÅ Estrutura do Projeto
.
‚îú‚îÄ‚îÄ monitor.py           # Script principal de monitoramento
‚îú‚îÄ‚îÄ .env                 # Vari√°veis de ambiente (IGNORADO pelo Git)
‚îú‚îÄ‚îÄ sites.txt            # Lista de URLs para monitorar
‚îú‚îÄ‚îÄ monitor.db           # Banco de dados SQLite (IGNORADO pelo Git)
‚îú‚îÄ‚îÄ monitor_sites.log    # Arquivo de log (IGNORADO pelo Git)
‚îî‚îÄ‚îÄ .gitignore           # Define arquivos e pastas a serem ignorados pelo Git

Os arquivos .env, monitor.dv e monitor_sites.log deveriam estar no .gitignore, afim de demonstra√ß√£o foram incluidos tamb√©m no push.

üìà Melhorias Futuras (Oportunidades de Expans√£o)
Interface Web: Desenvolver uma interface gr√°fica para visualiza√ß√£o dos dados hist√≥ricos e configura√ß√£o dos sites.

M√∫ltiplos Destinat√°rios de Alerta: Permitir configurar uma lista de e-mails ou outros canais (SMS, Telegram) para alertas.

Relat√≥rios Personalizados: Gerar relat√≥rios di√°rios/semanais de disponibilidade.

Monitoramento de Conte√∫do: Verificar se um texto espec√≠fico est√° presente na p√°gina, al√©m do status HTTP.

M√©tricas de Desempenho: Registrar tempo de resposta dos sites.

Dockeriza√ß√£o: Empacotar a aplica√ß√£o em um cont√™iner Docker para facilitar a implanta√ß√£o.

Cloud Deployment: Implantar a solu√ß√£o em plataformas de nuvem (AWS Lambda, Google Cloud Functions) para monitoramento sem servidor.

üìß Contato

Se tiver alguma d√∫vida ou sugest√£o sobre o projeto, sinta-se √† vontade para entrar em contato:

Leandro Rodrigues Campos Oliveira [leandrorodriguescamposti@gmail.com] [https://www.linkedin.com/in/leandro-oliveira-256916172/]
